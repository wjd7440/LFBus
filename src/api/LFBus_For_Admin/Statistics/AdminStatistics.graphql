type usersCharge {
  wallet: String
  userId: String
  name: String
  ChargeCount: Int
  ChargeTotal: Int
}
type usersStoreOrder {
  wallet: String
  userId: String
  name: String
  StoreOrderCount: Int
  StoreOrderTotal: Int
}
type usersStoreReturn {
  wallet: String
  userId: String
  name: String
  StoreReturnCount: Int
  StoreReturnTotal: Int
}
type usersRemittance {
  wallet: String
  userId: String
  name: String
  RemittanceCount: Int
  RemittanceTotal: Int
}
type usersDonation {
  wallet: String
  userId: String
  name: String
  DonationCount: Int
  DonationTotal: Int
}

type Statistics {
  DNTTotal: Int
  DNTIssueCount: Int
  DNTIssueTotal: Int
  DNTUseCount: Int
  DNTUseTotal: Int
  ChargeRequestUserCount: Int
  ChargeRequestCMSCount: Int
  ChargeRequestCMSTotal: Int
  ChargeRequestNomalCount: Int
  ChargeRequestNomalTotal: Int
  PaymentCount: Int
  PaymentTotal: Int
  RemittanceCount: Int
  RemittanceTotal: Int
  ExchangeRequestCount: Int
  ExchangeRequestTotal: Int
  usersCharge: [usersCharge]
  usersStoreOrder: [usersStoreOrder]
  usersStoreReturn: [usersStoreReturn]
  usersRemittance: [usersRemittance]
  usersDonation: [usersDonation]
  stores: [Store!]!
}

type Query {
  AdminStatistics(startDate: String, endDate: String): Statistics!
}
